<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>http://xsoda.github.io/</id>
  <title>Blog</title>
  <updated>2021-04-15T07:51:43.986222+00:00</updated>
  <link href="http://xsoda.github.io/"/>
  <link href="http://xsoda.github.io/blog/atom.xml" rel="self"/>
  <generator uri="https://ablog.readthedocs.org/" version="0.10.17">ABlog</generator>
  <entry>
    <id>http://xsoda.github.io/first-post/</id>
    <title>First Post</title>
    <updated>2015-10-30T00:00:00+00:00</updated>
    <author>
      <name>Xsoda</name>
    </author>
    <content type="html">&lt;p&gt;World, hello again! This very first paragraph of the post will be used
as excerpt in archives and feeds. Find out how to control how much is shown
in &lt;a class="reference external" href="http://ablog.readthedocs.org/manual/post-excerpts-and-images/"&gt;Post Excerpts and Images&lt;/a&gt;. Remember
that you can refer to posts by file name, e.g. &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;:ref:`first-post`&lt;/span&gt;&lt;/code&gt; results
in &lt;a class="reference internal" href="../first-post/#first-post"&gt;&lt;span class="std std-ref"&gt;First Post&lt;/span&gt;&lt;/a&gt;. Find out more at &lt;a class="reference external" href="http://ablog.readthedocs.org/manual/cross-referencing-blog-pages/"&gt;Cross-Referencing Blog Pages&lt;/a&gt;.&lt;/p&gt;
</content>
    <link href="http://xsoda.github.io/first-post/" rel="alternate"/>
    <summary>World, hello again! This very first paragraph of the post will be used
as excerpt in archives and feeds. Find out how to control how much is shown
in Post Excerpts and Images. Remember
that you can refer to posts by file name, e.g. :ref:`first-post` results
in first-post. Find out more at Cross-Referencing Blog Pages.</summary>
    <category term="atag" label="atag"/>
    <published>2015-10-30T00:00:00+00:00</published>
  </entry>
  <entry>
    <id>http://xsoda.github.io/binary-tree-iterator-non-recursion/</id>
    <title>关于二叉树遍历的一道思考题</title>
    <updated>2015-11-16T00:00:00+00:00</updated>
    <author>
      <name>Xsoda</name>
    </author>
    <content type="html">&lt;p&gt;偶然在网上看到一道关于二叉树的面试题目, 就尝试着做了一下. 题目如下:
给出一二叉树, 判断从顶到底段数据之和是否与目标数字相等.&lt;/p&gt;
</content>
    <link href="http://xsoda.github.io/binary-tree-iterator-non-recursion/" rel="alternate"/>
    <summary>偶然在网上看到一道关于二叉树的面试题目, 就尝试着做了一下. 题目如下:
给出一二叉树, 判断从顶到底段数据之和是否与目标数字相等.</summary>
    <category term="binary-tree" label="binary-tree"/>
    <category term="algorithm" label="algorithm"/>
    <published>2015-11-16T00:00:00+00:00</published>
  </entry>
  <entry>
    <id>http://xsoda.github.io/beautiful-native-libraries/</id>
    <title>漂亮的原生库</title>
    <updated>2015-11-28T00:00:00+00:00</updated>
    <author>
      <name>Xsoda</name>
    </author>
    <content type="html">&lt;p&gt;本文翻译自：&lt;a class="reference external" href="http://lucumr.pocoo.org/2013/8/18/beautiful-native-libraries/"&gt;http://lucumr.pocoo.org/2013/8/18/beautiful-native-libraries/&lt;/a&gt;&lt;/p&gt;
</content>
    <link href="http://xsoda.github.io/beautiful-native-libraries/" rel="alternate"/>
    <summary>本文翻译自：http://lucumr.pocoo.org/2013/8/18/beautiful-native-libraries/</summary>
    <category term="native-library" label="native-library"/>
    <category term="programming" label="programming"/>
    <category term="translation" label="translation"/>
    <published>2015-11-28T00:00:00+00:00</published>
  </entry>
  <entry>
    <id>http://xsoda.github.io/hpack-huffman-coding/</id>
    <title>HPACK中的霍夫曼编码</title>
    <updated>2015-12-26T00:00:00+00:00</updated>
    <author>
      <name>Xsoda</name>
    </author>
    <content type="html">&lt;p&gt;&lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;HTTP2.0&lt;/span&gt;&lt;/code&gt;&lt;a class="footnote-reference brackets" href="#http2-0" id="id1"&gt;2&lt;/a&gt;中头部采用了二进制格式，具体编码在&lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;HPACK&lt;/span&gt;&lt;/code&gt;&lt;a class="footnote-reference brackets" href="#id9" id="id2"&gt;3&lt;/a&gt;也已经详细解释了。
&lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;HPACK&lt;/span&gt;&lt;/code&gt;中对于字符串使用了霍夫曼编码&lt;a class="footnote-reference brackets" href="#huffman" id="id3"&gt;4&lt;/a&gt;来让传输更有效率，但是对于霍夫曼的解码过程一直没想
到如何仅仅使用查表的方法来进行。在看过一些论文和博客之后勉强想到了一个简单的可能不是很有效率的查表办法。&lt;/p&gt;
</content>
    <link href="http://xsoda.github.io/hpack-huffman-coding/" rel="alternate"/>
    <summary>HTTP2.02中头部采用了二进制格式，具体编码在HPACK3也已经详细解释了。
HPACK中对于字符串使用了霍夫曼编码4来让传输更有效率，但是对于霍夫曼的解码过程一直没想
到如何仅仅使用查表的方法来进行。在看过一些论文和博客之后勉强想到了一个简单的可能不是很有效率的查表办法。</summary>
    <category term="http2.0" label="http2.0"/>
    <category term="algorithm" label="algorithm"/>
    <category term="huffman" label="huffman"/>
    <published>2015-12-26T00:00:00+00:00</published>
  </entry>
  <entry>
    <id>http://xsoda.github.io/sphinx-mermaid/</id>
    <title>sphinx中使用mermaid画图</title>
    <updated>2021-04-14T00:00:00+00:00</updated>
    <author>
      <name>Xsoda</name>
    </author>
    <content type="html">&lt;p&gt;目前博客中的图片使用&lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;graphviz&lt;/span&gt;&lt;/code&gt;生成, 当要绘制复杂图形时很困难.
相对使用&lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;mermaid&lt;/span&gt;&lt;/code&gt;比较简单.&lt;/p&gt;
</content>
    <link href="http://xsoda.github.io/sphinx-mermaid/" rel="alternate"/>
    <summary>目前博客中的图片使用graphviz生成, 当要绘制复杂图形时很困难.
相对使用mermaid比较简单.</summary>
    <category term="sphinx" label="sphinx"/>
    <category term="mermaidjs" label="mermaidjs"/>
    <published>2021-04-14T00:00:00+00:00</published>
  </entry>
</feed>
